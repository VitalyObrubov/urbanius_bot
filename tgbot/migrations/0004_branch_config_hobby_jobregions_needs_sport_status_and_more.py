# Generated by Django 4.0.6 on 2022-08-01 09:43

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('tgbot', '0003_useractionlog_text'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Отрасль')),
            ],
            options={
                'verbose_name': 'Отрасль',
                'verbose_name_plural': 'Отрасли',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param_name', models.CharField(max_length=255, verbose_name='Наименование параметра')),
                ('param_val', models.TextField(blank=True, null=True, verbose_name='Значение параметра')),
            ],
            options={
                'verbose_name': 'Параметр бота',
                'verbose_name_plural': 'Параметры бота',
                'ordering': ['param_name'],
            },
        ),
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Вид хобби')),
            ],
            options={
                'verbose_name': 'Вид хобби',
                'verbose_name_plural': 'Виды хобби',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JobRegions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название региона работы')),
            ],
            options={
                'verbose_name': 'Регион работы',
                'verbose_name_plural': 'Регионы работы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Needs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Потребности')),
            ],
            options={
                'verbose_name': 'Потребность',
                'verbose_name_plural': 'Потребности',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Вид спорта')),
            ],
            options={
                'verbose_name': 'Вид спорта',
                'verbose_name_plural': 'Виды спорта',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Статус пользователя')),
            ],
            options={
                'verbose_name': 'Статус пользователя',
                'verbose_name_plural': 'Статусы пользователя',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='tgGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Группа пользователей')),
            ],
            options={
                'verbose_name': 'Группа пользователей',
                'verbose_name_plural': 'Группы пользователей',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'Пользователь', 'verbose_name_plural': 'Пользователи'},
        ),
        migrations.AddField(
            model_name='user',
            name='about',
            field=models.TextField(blank=True, null=True, verbose_name='О себе'),
        ),
        migrations.AddField(
            model_name='user',
            name='citi',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='user',
            name='comment',
            field=models.TextField(blank=True, null=True, verbose_name='комментарий'),
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='user',
            name='date_of_birth',
            field=models.DateField(default=django.utils.timezone.now, null=True, verbose_name='Дата рождения'),
        ),
        migrations.AddField(
            model_name='user',
            name='job',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='user',
            name='main_photo',
            field=models.ImageField(blank=True, null=True, upload_to='user_fotos', verbose_name='Основное фото'),
        ),
        migrations.AddField(
            model_name='user',
            name='referrers',
            field=models.ManyToManyField(blank=True, to='tgbot.user', verbose_name='Рекомендатели'),
        ),
        migrations.AddField(
            model_name='user',
            name='site',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Сайт'),
        ),
        migrations.AddField(
            model_name='user',
            name='sur_name',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество'),
        ),
        migrations.AddField(
            model_name='user',
            name='tags',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Тэги'),
        ),
        migrations.AddField(
            model_name='user',
            name='telefon',
            field=models.CharField(blank=True, max_length=13, null=True, verbose_name='Телефон'),
        ),
        migrations.AddField(
            model_name='user',
            name='telegram_login',
            field=models.CharField(blank=True, max_length=32, null=True, verbose_name='Телеграм логин'),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(max_length=256, verbose_name='Имя'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=256, null=True, verbose_name='Фамилия'),
        ),
        migrations.CreateModel(
            name='SocialNets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название сети')),
                ('link', models.URLField(verbose_name='Ссылка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Соц. сеть',
                'verbose_name_plural': 'Соц. сети',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer', models.TextField(verbose_name='Суть предложения')),
                ('image', models.FileField(blank=True, upload_to='offers', verbose_name='Файл')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Предложение',
                'verbose_name_plural': 'Предложения',
                'ordering': ['user'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='branch',
            field=models.ManyToManyField(blank=True, to='tgbot.branch', verbose_name='Отрасли'),
        ),
        migrations.AddField(
            model_name='user',
            name='club_groups',
            field=models.ManyToManyField(blank=True, to='tgbot.tggroups', verbose_name='Клубные группы'),
        ),
        migrations.AddField(
            model_name='user',
            name='hobbies',
            field=models.ManyToManyField(blank=True, to='tgbot.hobby', verbose_name='Хобби'),
        ),
        migrations.AddField(
            model_name='user',
            name='job_region',
            field=models.ManyToManyField(blank=True, to='tgbot.jobregions', verbose_name='Регионы работы'),
        ),
        migrations.AddField(
            model_name='user',
            name='needs',
            field=models.ManyToManyField(blank=True, to='tgbot.needs', verbose_name='Потребности'),
        ),
        migrations.AddField(
            model_name='user',
            name='sports',
            field=models.ManyToManyField(blank=True, to='tgbot.sport', verbose_name='Виды спорта'),
        ),
        migrations.AddField(
            model_name='user',
            name='status',
            field=models.ManyToManyField(blank=True, to='tgbot.status', verbose_name='Статусы'),
        ),
    ]
