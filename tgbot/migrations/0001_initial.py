# Generated by Django 4.0.6 on 2022-08-02 21:03

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Отрасль')),
            ],
            options={
                'verbose_name': 'Отрасль',
                'verbose_name_plural': 'Отрасли',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param_name', models.CharField(max_length=255, verbose_name='Наименование параметра')),
                ('param_val', models.TextField(blank=True, null=True, verbose_name='Значение параметра')),
            ],
            options={
                'verbose_name': 'Параметр бота',
                'verbose_name_plural': 'Параметры бота',
                'ordering': ['param_name'],
            },
        ),
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Вид хобби')),
            ],
            options={
                'verbose_name': 'Вид хобби',
                'verbose_name_plural': 'Виды хобби',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JobRegions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название региона работы')),
            ],
            options={
                'verbose_name': 'Регион работы',
                'verbose_name_plural': 'Регионы работы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Needs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Потребности')),
            ],
            options={
                'verbose_name': 'Потребность',
                'verbose_name_plural': 'Потребности',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Вид спорта')),
            ],
            options={
                'verbose_name': 'Вид спорта',
                'verbose_name_plural': 'Виды спорта',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Статус пользователя')),
            ],
            options={
                'verbose_name': 'Статус пользователя',
                'verbose_name_plural': 'Статусы пользователя',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='tgGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Группа пользователей')),
            ],
            options={
                'verbose_name': 'Группа пользователей',
                'verbose_name_plural': 'Группы пользователей',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=32, null=True, verbose_name='Телеграм логин')),
                ('last_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=256, verbose_name='Имя')),
                ('sur_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now, null=True, verbose_name='Дата рождения')),
                ('language_code', models.CharField(blank=True, help_text="Telegram client's lang", max_length=8, null=True)),
                ('deep_link', models.CharField(blank=True, max_length=64, null=True, verbose_name='Ссылка')),
                ('is_blocked_bot', models.BooleanField(default=False, verbose_name='Заблоктрован')),
                ('is_banned', models.BooleanField(default=False, verbose_name='Забанен')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Администратор')),
                ('is_moderator', models.BooleanField(default=False, verbose_name='Модератор')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('main_photo', models.ImageField(blank=True, null=True, upload_to='user_fotos', verbose_name='Основное фото')),
                ('telefon', models.CharField(blank=True, max_length=13, null=True, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='E-mail')),
                ('citi', models.CharField(blank=True, max_length=150, null=True, verbose_name='Город')),
                ('company', models.CharField(blank=True, max_length=150, null=True, verbose_name='Компания')),
                ('job', models.CharField(blank=True, max_length=150, null=True, verbose_name='Должность')),
                ('site', models.CharField(blank=True, max_length=150, null=True, verbose_name='Сайт')),
                ('tags', models.CharField(blank=True, max_length=150, null=True, verbose_name='Тэги')),
                ('about', models.TextField(blank=True, null=True, verbose_name='О себе')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='комментарий')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='tgbot.branch', verbose_name='Отрасль')),
                ('club_groups', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='tgbot.tggroups', verbose_name='Клубная группа')),
                ('job_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='tgbot.jobregions', verbose_name='Регион работы')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='tgbot.status', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Член клуба',
                'verbose_name_plural': 'Члены клуба',
            },
        ),
        migrations.CreateModel(
            name='Arcgis',
            fields=[
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tgbot.location')),
                ('match_addr', models.CharField(max_length=200)),
                ('long_label', models.CharField(max_length=200)),
                ('short_label', models.CharField(max_length=128)),
                ('addr_type', models.CharField(max_length=128)),
                ('location_type', models.CharField(max_length=64)),
                ('place_name', models.CharField(max_length=128)),
                ('add_num', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=128)),
                ('block', models.CharField(max_length=128)),
                ('sector', models.CharField(max_length=128)),
                ('neighborhood', models.CharField(max_length=128)),
                ('district', models.CharField(max_length=128)),
                ('city', models.CharField(max_length=64)),
                ('metro_area', models.CharField(max_length=64)),
                ('subregion', models.CharField(max_length=64)),
                ('region', models.CharField(max_length=128)),
                ('territory', models.CharField(max_length=128)),
                ('postal', models.CharField(max_length=128)),
                ('postal_ext', models.CharField(max_length=128)),
                ('country_code', models.CharField(max_length=32)),
                ('lng', models.DecimalField(decimal_places=18, max_digits=21)),
                ('lat', models.DecimalField(decimal_places=18, max_digits=21)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserSport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.sport', verbose_name='Вид спорта')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Спорт',
                'verbose_name_plural': 'Спорт',
                'ordering': ['user', 'sport'],
            },
        ),
        migrations.CreateModel(
            name='UserReferrers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrer', to='tgbot.user', verbose_name='Рекомендатель')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='tgbot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Рекомендатель',
                'verbose_name_plural': 'Рекомендатели',
                'ordering': ['user', 'referrer'],
            },
        ),
        migrations.CreateModel(
            name='UserNeeds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.needs', verbose_name='Потребность')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Потребность пользователя',
                'verbose_name_plural': 'Потребности пользователя',
                'ordering': ['user', 'need'],
            },
        ),
        migrations.CreateModel(
            name='UserHobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hobby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.hobby', verbose_name='Хобби')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Хобби пользователя',
                'verbose_name_plural': 'Хобби пользователя',
                'ordering': ['user', 'hobby'],
            },
        ),
        migrations.CreateModel(
            name='UserActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=128)),
                ('text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.user')),
            ],
        ),
        migrations.CreateModel(
            name='SocialNets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название сети')),
                ('link', models.URLField(verbose_name='Ссылка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Соц. сеть',
                'verbose_name_plural': 'Соц. сети',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer', models.TextField(verbose_name='Суть предложения')),
                ('image', models.FileField(blank=True, upload_to='offers', verbose_name='Файл')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Предложение',
                'verbose_name_plural': 'Предложения',
                'ordering': ['user'],
            },
        ),
        migrations.AddField(
            model_name='location',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tgbot.user'),
        ),
    ]
